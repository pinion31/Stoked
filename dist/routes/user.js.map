{"version":3,"sources":["../../server/routes/user.js"],"names":["express","require","router","Router","User","post","req","res","findOneAndUpdate","profileId","body","name","description","profilePic","new","then","json","user","catch","err","console","log","session","passport","findOne","save","toObject","error","get","find","lean","users","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,OAAOH,QAAQ,gBAAR,CAAb;;AAEA;;;;AAIAC,OAAOG,IAAP,CAAY,UAAZ,EAAwB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACnCH,OAAKI,gBAAL,CAAsB,EAACC,WAAWH,IAAII,IAAJ,CAASD,SAArB,EAAtB,EAAuD;AACrDE,UAAML,IAAII,IAAJ,CAASC,IADsC;AAErDC,iBAAaN,IAAII,IAAJ,CAASE,WAF+B;AAGrDC,gBAAY;AAHyC,GAAvD,EAMA;AACEC,SAAI;AADN,GANA,EAQGC,IARH,CAQQ,gBAAQ;AACdR,QAAIS,IAAJ,CAASC,IAAT;AACD,GAVD,EAUGC,KAVH,CAUS,eAAO;AACd,UAAMC,GAAN;AACD,GAZD;;AAcA;;;;;;;;;;;AAaD,CA5BD;;AA8BA;;;;AAIAjB,OAAOG,IAAP,CAAY,WAAZ,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACpCa,UAAQC,GAAR,CAAYf,IAAIgB,OAAJ,CAAYC,QAAZ,CAAqBN,IAArB,CAA0BR,SAAtC;AACAL,OAAKoB,OAAL,CAAa,EAACf,WAAWH,IAAIgB,OAAJ,CAAYC,QAAZ,CAAqBN,IAArB,CAA0BR,SAAtC,EAAb,EACGM,IADH,CACQ,gBAAQ;AACZ,QAAIE,IAAJ,EAAU;AACRA,WAAKN,IAAL,GAAYL,IAAII,IAAJ,CAASC,IAArB;AACAM,WAAKL,WAAL,GAAmBN,IAAII,IAAJ,CAASE,WAA5B;AACAK,WAAKJ,UAAL,GAAkBP,IAAII,IAAJ,CAASG,UAA3B;AACAI,WAAKQ,IAAL;AACAlB,UAAIS,IAAJ,CAASC,KAAKS,QAAL,EAAT;AACD,KAND,MAMO;AACLnB,UAAIS,IAAJ,CAAS,EAACW,OAAO,gBAAR,EAAT;AACD;AACF,GAXH;AAYD,CAdD;;AAgBAzB,OAAO0B,GAAP,CAAW,UAAX,EAAuB,UAACtB,GAAD,EAAKC,GAAL,EAAa;AAClCH,OAAKyB,IAAL,CAAU,EAACpB,WAAWH,IAAIgB,OAAJ,CAAYC,QAAZ,CAAqBN,IAArB,CAA0BR,SAAtC,EAAV,EAA4DqB,IAA5D,GACGf,IADH,CACQ,gBAAQ;AACZR,QAAIS,IAAJ,CAASC,KAAK,CAAL,CAAT;AACD,GAHH,EAGKC,KAHL,CAGW,eAAO;AACd,QAAIC,GAAJ,EAAS;AACP,YAAMA,GAAN;AACD;AACF,GAPH;AAQD,CATD;;AAWAjB,OAAO0B,GAAP,CAAW,cAAX,EAA2B,UAACtB,GAAD,EAAKC,GAAL,EAAa;AACtCH,OAAKyB,IAAL,CAAU,EAAV,EAAcC,IAAd,GACGf,IADH,CACQ,iBAAS;AACbR,QAAIS,IAAJ,CAAS,CAACe,KAAD,CAAT;AACD,GAHH,EAGKb,KAHL,CAGW,eAAO;AACd,QAAIC,GAAJ,EAAS;AACP,YAAMA,GAAN;AACD;AACF,GAPH;AAQD,CATD;;AAWAa,OAAOC,OAAP,GAAiB/B,MAAjB","file":"user.js","sourcesContent":["'use strict';\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst User = require('../models/user');\r\n\r\n/**\r\n* req input: {name:String, email: String, profilePic: String, description:String}\r\n* res output: {_id: String, name:String, email: String, profilePic: String, description:String, __v: Number}\r\n*/\r\nrouter.post('/addUser', (req,res) => {\r\n  User.findOneAndUpdate({profileId: req.body.profileId}, {\r\n    name: req.body.name,\r\n    description: req.body.description,\r\n    profilePic: {\r\n    },\r\n  },\r\n  {\r\n    new:true\r\n  }).then(user => {\r\n    res.json(user);\r\n  }).catch(err => {\r\n    throw err;\r\n  });\r\n\r\n  /*const user = new User({\r\n    profileId: req.body.email,\r\n    name: req.body.name,\r\n    description: req.body.description,\r\n    profilePic: req.body.profilePic,\r\n  });\r\n\r\n  user.save((err) => {\r\n    if (err) {throw err; }\r\n    const newUser = user.toObject();\r\n\r\n    res.json(newUser);\r\n  });*/\r\n});\r\n\r\n/**\r\n* req input: {name:String, profilePic: String, description:String}\r\n* res output: {_id: String, name:String, profileId: String, profilePic: String, description:String, __v: Number}\r\n*/\r\nrouter.post('/editUser', (req,res) => {\r\n  console.log(req.session.passport.user.profileId);\r\n  User.findOne({profileId: req.session.passport.user.profileId})\r\n    .then(user => {\r\n      if (user) {\r\n        user.name = req.body.name;\r\n        user.description = req.body.description;\r\n        user.profilePic = req.body.profilePic;\r\n        user.save();\r\n        res.json(user.toObject());\r\n      } else {\r\n        res.json({error: 'user not found'});\r\n      }\r\n    });\r\n});\r\n\r\nrouter.get('/getUser', (req,res) => {\r\n  User.find({profileId: req.session.passport.user.profileId}).lean()\r\n    .then(user => {\r\n      res.json(user[0]);\r\n    }).catch(err => {\r\n      if (err) {\r\n        throw err;\r\n      }\r\n    });\r\n});\r\n\r\nrouter.get('/getAllUsers', (req,res) => {\r\n  User.find({}).lean()\r\n    .then(users => {\r\n      res.json([users]);\r\n    }).catch(err => {\r\n      if (err) {\r\n        throw err;\r\n      }\r\n    });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}