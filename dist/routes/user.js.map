{"version":3,"sources":["../../server/routes/user.js"],"names":["express","require","router","Router","User","post","req","res","user","email","body","name","description","profilePic","save","err","newUser","toObject","json","findOne","then","error","get","find","lean","users","catch","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAMC,OAAOH,QAAQ,gBAAR,CAAb;;AAEA;;;;AAIAC,OAAOG,IAAP,CAAY,UAAZ,EAAwB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACnC;AACA;AACA,MAAMC,OAAO,IAAIJ,IAAJ,CAAS;AACpBK,WAAOH,IAAII,IAAJ,CAASD,KADI;AAEpBE,UAAML,IAAII,IAAJ,CAASC,IAFK;AAGpBC,iBAAaN,IAAII,IAAJ,CAASE,WAHF;AAIpBC,gBAAYP,IAAII,IAAJ,CAASG;AAJD,GAAT,CAAb;;AAOAL,OAAKM,IAAL,CAAU,UAACC,GAAD,EAAS;AACjB,QAAIA,GAAJ,EAAS;AAAC,YAAMA,GAAN;AAAY;AACtB,QAAMC,UAAUR,KAAKS,QAAL,EAAhB;;AAEAV,QAAIW,IAAJ,CAASF,OAAT;AACD,GALD;AAMD,CAhBD;;AAkBA;;;;AAIAd,OAAOG,IAAP,CAAY,WAAZ,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAAa;AACpCH,OAAKe,OAAL,CAAa,EAACV,OAAOH,IAAII,IAAJ,CAASD,KAAjB,EAAb,EACGW,IADH,CACQ,gBAAQ;AACZ,QAAIZ,IAAJ,EAAU;AACRA,WAAKG,IAAL,GAAYL,IAAII,IAAJ,CAASC,IAArB;AACAH,WAAKI,WAAL,GAAmBN,IAAII,IAAJ,CAASE,WAA5B;AACAJ,WAAKK,UAAL,GAAkBP,IAAII,IAAJ,CAASG,UAA3B;AACAL,WAAKM,IAAL;AACAP,UAAIW,IAAJ,CAASV,KAAKS,QAAL,EAAT;AACD,KAND,MAMO;AACLV,UAAIW,IAAJ,CAAS,EAACG,OAAO,gBAAR,EAAT;AACD;AACF,GAXH;AAYD,CAbD;;AAeAnB,OAAOoB,GAAP,CAAW,cAAX,EAA2B,UAAChB,GAAD,EAAKC,GAAL,EAAa;AACtCH,OAAKmB,IAAL,CAAU,EAAV,EAAcC,IAAd,GACGJ,IADH,CACQ,iBAAS;AACbb,QAAIW,IAAJ,CAAS,CAACO,KAAD,CAAT;AACD,GAHH,EAGKC,KAHL,CAGW,eAAO;AACd,QAAIX,GAAJ,EAAS;AACP,YAAMA,GAAN;AACD;AACF,GAPH;AAQD,CATD;;AAWAY,OAAOC,OAAP,GAAiB1B,MAAjB","file":"user.js","sourcesContent":["'use strict';\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst User = require('../models/user');\r\n\r\n/**\r\n* req input: {name:String, email: String, profilePic: String, description:String}\r\n* res output: {_id: String, name:String, email: String, profilePic: String, description:String, __v: Number}\r\n*/\r\nrouter.post('/addUser', (req,res) => {\r\n  //search using email to see if user already exists\r\n  // if not, create new user\r\n  const user = new User({\r\n    email: req.body.email,\r\n    name: req.body.name,\r\n    description: req.body.description,\r\n    profilePic: req.body.profilePic,\r\n  });\r\n\r\n  user.save((err) => {\r\n    if (err) {throw err; }\r\n    const newUser = user.toObject();\r\n\r\n    res.json(newUser);\r\n  });\r\n});\r\n\r\n/**\r\n* req input: {name:String, email: String, profilePic: String, description:String}\r\n* res output: {_id: String, name:String, email: String, profilePic: String, description:String, __v: Number}\r\n*/\r\nrouter.post('/editUser', (req,res) => {\r\n  User.findOne({email: req.body.email})\r\n    .then(user => {\r\n      if (user) {\r\n        user.name = req.body.name;\r\n        user.description = req.body.description;\r\n        user.profilePic = req.body.profilePic;\r\n        user.save();\r\n        res.json(user.toObject());\r\n      } else {\r\n        res.json({error: 'user not found'});\r\n      }\r\n    });\r\n});\r\n\r\nrouter.get('/getAllUsers', (req,res) => {\r\n  User.find({}).lean()\r\n    .then(users => {\r\n      res.json([users]);\r\n    }).catch(err => {\r\n      if (err) {\r\n        throw err;\r\n      }\r\n    });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}